package com.cbsgenesis.homework.manufacturer;

import java.util.*;

public class AppDemo {
    public static void main(String[] args) {
        List<Manufacturer> manufacturers = createManufacturers();
        Integer choice = 0;

        do {
            System.out.println("===========================================");
            System.out.println("Menu");
            System.out.println("1 - Информация о доступных продуктах Sony");
            System.out.println("2 - Отсортировать продукты Sony по имени");
            System.out.println("3 - Отсортировать продукты Sony по цене");
            System.out.println("4 - Информация о доступных продуктах Samsung");
            System.out.println("5 - Отсортировать продукты Samsung по имени");
            System.out.println("6 - Отсортировать продукты Samsung по цене");
            System.out.println("7 - exit");
            System.out.println("===========================================");
            System.out.println("Введите нужный пункт в меню");
            Scanner scanner=new Scanner(System.in);
            choice = scanner.nextInt();
            switch (choice){
                case 1:
                    System.out.println(findManufacturerByName(manufacturers, "sony").getProducts());
                    break;
                case 2:
                    sortProductNameSony();
                    break;
                case 3:
                    sortSalarySony();
                    break;
                case 4:
                    System.out.println(findManufacturerByName(manufacturers, "samsung").getProducts());
                    break;
                case 5:
                    sortProductNameSamsung();
                    break;
                case 6:
                    sortSalarySamsung();
                    break;
                case 7:
                    break;
                default:
                    System.out.println("Извените такого пункта в меню не существует.Попробуйте снова");
                    break;
            }
        }while (choice!=7);
    }
    private static List<Manufacturer> createManufacturers(){
        List<Manufacturer> manufacturers = new ArrayList<>();
        Manufacturer sony = new Manufacturer("Sony");
        Manufacturer samsung = new Manufacturer("Samsung");

        sony.setProducts(createSonyProducts());
        samsung.setProducts(createSamsungProducts());

        manufacturers.add(sony);
        manufacturers.add(samsung);

        return manufacturers;
    }

    private static Set<Product> createSonyProducts(){
        TreeSet<Product> products = new TreeSet<>();
        Product sonyTV = new Product("Sony TV",15000);
        Product sonyPhone = new Product("Sony Phone",5000);
        Product sonyPlayer=new Product("Sony Player",3000);
        Product sonyTablet=new Product("Sony Tablet",6000);


        products.add(sonyTV);
        products.add(sonyPhone);
        products.add(sonyPlayer);
        products.add(sonyTablet);

        return products;
    }

    private static Set<Product> createSamsungProducts(){
        TreeSet<Product> products = new TreeSet<>();
        Product samsungTV = new Product("Samsung TV",14000);
        Product samsungPhone = new Product("Samsung Phone",7000);
        Product samsungMicrowave=new Product("Samsung Microwave",8500);
        Product samsungTablet=new Product("Samsung Tablet",9000);


        products.add(samsungPhone);
        products.add(samsungTV);
        products.add(samsungMicrowave);
        products.add(samsungTablet);

        return products;
    }

    private static void showManufacturerProducts(Manufacturer manufacturer){
        System.out.print(manufacturer.getProducts());
    }


    private static Manufacturer findManufacturerByName(List<Manufacturer> manufacturers, String name){
        Manufacturer manufacturer = new Manufacturer();
        for (int i = 0; i< manufacturers.size(); i++){
            if(manufacturers.get(i).getName().equalsIgnoreCase(name)){
                manufacturer = manufacturers.get(i);
            }
        }
        return manufacturer;

    }

    public static void sortSalarySony()
    {
        Set<Product>products=new TreeSet<Product>(new ProductByPriceComparator());
        products = createSonyProducts();
        System.out.println(products);

    }

    public static void sortSalarySamsung()
    {
        Set<Product>products=new TreeSet<Product>(new ProductByPriceComparator());
        products = createSamsungProducts();
        System.out.println(products);

    }

    public static void sortProductNameSony()
    {
        Set<Product>products=new TreeSet<Product>(new ProductByNameComparator());
        products = createSonyProducts();
        System.out.println(products);

    }

    public static void sortProductNameSamsung()
    {
        Set<Product>products=new TreeSet<Product>(new ProductByNameComparator());
        products = createSamsungProducts();
        System.out.println(products);
    }
}
